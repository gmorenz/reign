name: Windows
on:
  push:
    branches: [master]
    paths-ignore: ["docs/**"]
  pull_request:
    branches: [master]
    types: [opened, reopened, synchronize]
    paths-ignore: ["docs/**"]
jobs:
  test:
    strategy:
      matrix:
        target: [i686-pc-windows-msvc, x86_64-pc-windows-msvc]
        rust: [nightly-2020-03-19]
    name: Test
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - name: Cache cargo
        uses: actions/cache@v1
        with:
          path: C:\Users\runneradmin\.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --manifest-path reign\Cargo.toml --target ${{ matrix.target }} -- --test-threads 1
      # - name: Install sqlite
      #   run: |
      #     choco install 7zip
      #     mkdir C:\Users\runneradmin\sqlite
      #     CD /D C:\Users\runneradmin\sqlite
      #     curl -fsS --retry 3 --retry-connrefused -o sqlite3.zip https://sqlite.org/2017/sqlite-dll-win64-x64-3160200.zip
      #     7z e sqlite3.zip -y
      #     call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      #     lib /machine:x64 /def:sqlite3.def /out:sqlite3.lib
      # - name: Test examples
      #   run: bash test.sh
      #   env:
      #     SQLITE3_LIB_DIR: C:\Users\runneradmin\sqlite
      - name: Install cargo-cache
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-cache
          use-tool-cache: true
      - name: Cleanup cache
        run: cargo cache -a
