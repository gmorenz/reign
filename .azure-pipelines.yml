name: $(Build.BuildId)
stages:
  - stage: Testing
    jobs:
      - job:
        variables:
          rust: nightly-2020-01-08
        strategy:
          matrix:
            Windows 32-bit (MSVC):
              image: vs2017-win2016
              target: i686-pc-windows-msvc
            Windows 64-bit (MSVC):
              image: vs2017-win2016
              target: x86_64-pc-windows-msvc
        pool:
          vmImage: $(image)
        steps:
          - checkout: self
            fetchDepth: 1
            path: reign
            displayName: Checkout repository
          - script: |
              choco install 7zip
              mkdir C:\sqlite
              CD /D C:\sqlite
              curl -fsS --retry 3 --retry-connrefused -o sqlite3.zip https://sqlite.org/2017/sqlite-dll-win64-x64-3160200.zip
              7z e sqlite3.zip -y
              call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
              lib /machine:x64 /def:sqlite3.def /out:sqlite3.lib
            displayName: Install sqlite
          - task: Cache@2
            inputs:
              key: cargo | "$(rust)" | $(target) | Cargo.toml
              path: C:\Rust\.cargo
            displayName: Caching cargo
          - task: Cache@2
            inputs:
              key: compiled | "$(rust)" | $(target) | Cargo.toml
              path: target
            displayName: Caching compiled
          - script: rustup default $(rust)-$(target)
            displayName: Install rust
          - script: cargo test --all-features
            displayName: Run cargo tests
          - task: Bash@3
            inputs:
              filePath: test.sh
            env:
              SQLITE3_LIB_DIR: C:\sqlite
            displayName: Run cargo examples tests
          - script: |
              rmdir /Q /S C:\Rust\.cargo\registry\src
              rmdir /Q /S target\.rustc_info.json
              rmdir /Q /S target\debug\incremental
            displayName: Cleaning for cache
            continueOnError: true
